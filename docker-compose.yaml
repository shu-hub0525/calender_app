volumes:
  frontend_node_modules:
  mysql_data:

    #ホットリロード機能
x-develop: &default-develop
  watch:
    - path: ./frontend_react
      target: /frontend_react
      action: sync
    - path: ./backend_fastapi
      target: /backend_fastapi
      action: sync
services:
  #フロントエンドコンテナ
  fe:
    container_name: calender-app-frontend
    build:
      context: .
      dockerfile: ./.dockerfiles/Dockerfile.frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    expose:
      - "${FRONTEND_PORT}"
    tty: true
    volumes:
      - ./frontend_react:/frontend_react
      - frontend_node_modules:/frontend_react/node_modules
    networks:
      - default
    develop:
      watch:
        - path: ./frontend_react
          target: /frontend_react
          action: sync
  #バックエンドコンテナ
  be:
    container_name: calender-app-backend
    build:
      context: .
      dockerfile: ./.dockerfiles/Dockerfile.backend
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    expose:
      - "${BACKEND_PORT}"
    tty: true
    volumes:
      - ./backend_fastapi:/backend_fastapi
    networks:
      - default
    depends_on:
      - db
    develop:
      watch:
        - path: ./backend_fastapi
          target: /backend_fastapi
          action: sync
  #データベースコンテナ
  db:
    container_name: calender-app-database
    build:
      context: .
      dockerfile: ./.dockerfiles/Dockerfile.database
    env_file:
      - .env
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./database_mysql/cnf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./database_mysql/initdb.d:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Tokyo
    networks:
      - default

networks:
  default:
    driver: bridge
